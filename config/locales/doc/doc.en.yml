en:
 doc:
   introduction:
     title: Introduction
     sections:
       what_is_berling:
         title: What is Berlin?
         content: |
           Berlin is a turn-based multiplayer artificial intelligence
           strategy board game. The idea is simple: you code an artificial
           intelligence (AI) and register it. You can then compete with
           the other AIs in a game similar to Risk.
       how_to_play:
         title: How do I play
         content: |
           All the AIs are placed on a board game with paths, nodes,
           cities and soldiers. The board's current state is sent to
           your AI with a set of rules (explained later). Your AI is
           then able to decide how to move it's soldiers in order to
           conquer as many cities as possible to earn points. Berlin
           will repeat process until the game is over, when a player
           wins or when the maximum number of turn has been reached.
       what_do_i_need:
         title: What do I need?
         content: |
           Berlin does not host any AI. Each user need to host his
           AIs and have an accessible URL when you register his AI.
           You can host the AI on your computer, but you should make
           sur that your AI remains accessible and functionnal at all
           time.
       programming_language:
         title: What programming language will I use?
         content: |
           All the communications between Berlin and your AI are over
           HTTP using JSON. This means that you can use the language
           of your choice, as long as you can host a server.
   specifications:
     title: Specifications
     sections:
       rules:
         title: Rules
         sections:
           maximum_number_of_turns:
             title: Maximum number of turns (maximum_number_of_turns)
             content: |
               The maximum number of turns allowed for the game. If
               the game reaches this many turns, the score will be
               distributed between the remaining AIs according to
               the nodes they currently control.
           directed_map:
             title: Directed map (directed)
             content: |
               In a directed map, the paths are one-way. This means that
               if there is a path between the node #1 and the node #2
               but not the other way around, the soldiers will not be
               able to travel from the node #2 to the node #1 directly.
               Undirected maps do not have this restriction and each paths
               is bidirectionnal.
           time_limit_per_turn:
             title: Time limit per turn (time_limit_per_turn)
             content: |
               The maximum allowed time for a turn, in milliseconds.
               If you AI has not responded within this time, Berlin
               understand that your AI will not move for this turn.
     board:
       title: Board game
       sections:
         nodes:
           title: Nodes (node)
           content: |
             The nodes are at the core of the game. They are the intersections between paths, and your troops must own the nodes to score
             at the end of the game. The nodes are distributed on the board and linked with paths. You must determine which node is worth 
             fighting for. Each node has a type, and it's properties are defined for each map. For example, a node type can be called
             "Castle", yield two soldiers per turn and be worth four points at the end of the game. Another one could be called "Crossroads", 
             yeild no soldiers and be worth no points.
           sections:
             owner_id:
               title: Possession (owner_id)
               content: |
                 The nodes can be free (empty) or occupied by a maximum of one AI. If more than one AI are standing on a node at the end of a turn,
                 there will be a combat to determine who will win the possession of the node.
             soldiers_per_turn:
               title: Reinforcement (soldiers_per_turn)
               content: |
                 Each node has a type which determines how many soldiers it will yield per turn. After the combat, the winner will recieve a
                 reinforcement of this many units. Watch out, this number can also be negative.
             points:
               title: Points (points)
               content: |
                 Each node can be worth a positive or negative number of points. At the end of the game, each AI will score relative to
                 the points attributed to each of the nodes it possesses and how many points are available on the board.
         paths:
           title: Paths (paths)
           content: |
             The paths are links between nodes allowing soldiers to move from one node to another. They are specified as starting from a node (from), to
             the other node (to). If the map is directed, each path can only be used in one direction. If the map is undirected, the paths can be used
             in both directions.
         combats:
           title: Combats
           content: |
             Combats take place when more than one AI are on the same node at the end of a turn. Combats occur in the following way: each AI will
             lose one soldier simultaneously until there is only one AI left, or none. The owner of the node will be the only remaining AI if there is one,
             or the last owner if all the soldiers were killed. 
   communication:
     title: Communications
     sections:
       ready_url:
         title: Info URL
         sections:
           what_it_is:
             title: What is it?
             content: |
               For each AI you create, you will be required to create an Info URL. We will use this url before each game to ensure that
               all the AIs are ready and functionnal. At this time, you will recieve a copy of the map. You can use this information 
               in any way you like, including calculating your strategy. The AI must return a 200 OK status, otherwise it will be considered 
               non-functionnal. 
           details:
             title: Request details
             content: |
               <dl>
                 <dt>Type</dt><dd>Post</dd>
                 <dt>Content</dt><dd>JSON</dd>
                 <dt>Parameters sent</dt>
                 <dd>
                   <dl>
                     <dt>self</dt><dd>The AI's unique ID for this game.</dd>
                     <dt>game</dt><dd>The game's unique ID.</dd>
                     <dt>json</dt><dd>See Annex 1 : RequestJSON</dd>
                   </dl>
                 </dd>
                 <dt>Expected response</dt>
                 <dd>
                   <dl>
                     <dt>Statut</dt><dd>200 OK</dd>
                   </dl>
                 </dd>
               </dl>
       on_turn_url:
         title: onTurn URL
         sections:
           what_it_is:
             title: What is it?
             content: |
               During the game, Berlin will send you the state of the game at each turn, using the onTurn URL. At this stage, your AI is considered
               active and any response received after the maximum specified for the game will be ignored. Berlin will understand that your AI has
               no move to make. Note that each turn, the complete state of the map is sent to allow for stateless AIs.
           details:
             title: Request details
             content: |
               <dl>
                 <dt>Type</dt><dd>Post</dd>
                 <dt>Content</dt><dd>JSON</dd>
                 <dt>Parameters sent</dt>
                 <dd>
                   <dl>
                     <dt>self</dt><dd>The AI's unique ID for this game.</dd>
                     <dt>game</dt><dd>The game's unique ID.</dd>
                     <dt>turn<dt><dd>The turn number.</dd>
                     <dt>json<dt><dd>JSON representing the current state of the game. See Annex 1: RequestJSON</dd>
                   </dl>
                 </dd>
                 <dt>Expected response</dt>
                 <dd>
                   <dl>
                     <dt>Statut<dt><dd>200 OK</dd>
                     <dt>Body<dt><dd>JSON representing the moves your AI chooses to make. See Annex 2: ResponseJSON</dd>
                   </dl>
                 </dd>
