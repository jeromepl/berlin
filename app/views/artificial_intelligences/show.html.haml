.content
  .buttons
    - if @artificial_intelligence.belongs_to? current_user
      = link_to t('helpers.submit.edit'), edit_artificial_intelligence_path( @artificial_intelligence ), :class => :button
      = link_to t('artificial_intelligences.ping'), ping_artificial_intelligence_path( @artificial_intelligence ), :class => :button

    = link_to t('games.new'), new_game_path( :artificial_intelligence_id => @artificial_intelligence.id ), :class => :button

  %h2= @artificial_intelligence.name

  %table.large
    %thead
      %tr
        %th(colspan=2)= t('common.statistics')
    %tbody
      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :user
        %td= link_to @artificial_intelligence.user.username, @artificial_intelligence.user

      - if @artificial_intelligence.belongs_to?( current_user )
        %tr
          %td.label= ArtificialIntelligence.human_attribute_name :url
          %td= @artificial_intelligence.url

      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :is_active
        %td= @artificial_intelligence.is_active
      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :language
        %td= @artificial_intelligence.language
      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :artificial_intelligence_games_count
        %td= @artificial_intelligence.games_played
      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :won_games
        %td= @artificial_intelligence.won_games
      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :victory_percentage
        %td= @artificial_intelligence.victory_percentage
      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :score
        %td= show_score( @artificial_intelligence.score )
      %tr
        %td.label= ArtificialIntelligence.human_attribute_name :created_at
        %td= l( @artificial_intelligence.created_at, :format => :long )

.content
  = render :partial => '/awards/list', :locals => {:awards => @artificial_intelligence.awards}

.content
  %h2= t('common.history')

  #graph{:style => "height: 300px;"}

  :javascript
    window.onload = function () {
      new Grafico.LineGraph(
        // Graph ID
        $('graph'),

        // Data
        {
          ai1: [#{@artificial_intelligence.artificial_intelligence_games.for_official_games.recent.map{|x|(x.score * 100).to_i}.join(',')}]
        },

        // Options
        {
          grid :                  true,
          plot_padding :          0,
          curve_amount :          0,
          start_at_zero :         true,
          stroke_width :          3,
          label_rotation :        -30,
          font_size :             11,
          vertical_label_unit :   "",
          colors :                {ai1: '#4b80b6'},
          background_color :      "#fff",
          label_color :           "#444",
          grid_color :            "#ccf",
          markers :               "value",
          meanline :              { 'stroke-width': '0px', stroke: '#000' },
          draw_axis :             false,
          labels :                [#{@artificial_intelligence.game_ids.reverse.take(30).join(',')}],
          hide_empty_label_grid : true
        });
    };

.content
  %h2= t('titles.official_games')

  = render :partial => '/games/list', :locals => {:games => @official_games}

- if @artificial_intelligence.belongs_to? current_user
  .content
    %h2= t('titles.practice_games')

    = render :partial => '/games/list', :locals => {:games => @practice_games}
